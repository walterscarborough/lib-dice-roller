use cbindgen;
use cbindgen::Language;
use flatc_rust;
use std::env;
use std::path::Path;

fn main() {
    generate_flatbuffer_files();
    generate_c_header_bindings();
}

fn generate_flatbuffer_files() {
    println!("cargo:rerun-if-changed=flatbuffer_schemata/roll_request.fbs");
    println!("cargo:rerun-if-changed=flatbuffer_schemata/roll_response.fbs");
    flatc_rust::run(flatc_rust::Args {
        inputs: &[
            Path::new("flatbuffer_schemata/roll_request.fbs"),
            Path::new("flatbuffer_schemata/roll_response.fbs"),
        ],
        out_dir: Path::new("src/roll_generated/"),
        ..Default::default()
    })
    .expect("flatc");
}

fn generate_c_header_bindings() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
    cbindgen::Builder::new()
        .with_crate(crate_dir)
        .with_language(Language::C)
        .with_autogen_warning(
            "/* \n\
            Warning, this file is autogenerated by cbindgen. \n\
            Don't modify this manually. \n\
            */",
        )
        .generate()
        .expect("Unable to generate cbindgen bindings")
        .write_to_file("./generated_c_headers/lib_dice_roller_bindings.h");
}
